defaultImageTag: ~ # set to the GIT SHA1 in the Makefile
defaultImagePullPolicy: IfNotPresent
environment: ~

# Ciip portal configuration
# These values need to be set for the chart to configure access from the ciip application/namepsace
ciip:
  namespace: ~
  release: ~
  prefix: ~
  environment: ~

# Cif app configuration
# These values need to be set for the chart to configure access from the cif application/namepsace
cif:
  namespace: ~
  release: ~
  prefix: ~
  environment: ~

metabase:
  instanceName: cas-metabase

database:
  releaseName: cas-ggircs-db
  chartName: cas-postgres-cluster
  user: ggircs

image:
  app:
    repository: ghcr.io/bcgov/cas-ggircs-app
  schema:
    repository: ghcr.io/bcgov/cas-ggircs-app-schema
  etl:
    repository: ghcr.io/bcgov/cas-ggircs-etl
  psql:
    repository: ghcr.io/bcgov/cas-postgres
    pullPolicy: Always
    tag: latest
  ecccUpload:
    repository: ghcr.io/bcgov/cas-ggircs-eccc-upload
  ecccExtract:
    repository: ghcr.io/bcgov/cas-ggircs-eccc-extract

persistence:
  db: ggircs
  user: ggircs
  readonlyUser: ggircs_readonly
  appUser: ggircs_app
  relayUser: ggircs_user
  preInitDb: ""

swrsImportBucket:
  enable: true
  bucketSuffix: swrs-import

storageClassName: netapp-file-standard

swrsGcpApi:
  image:
    repository: ghcr.io/bcgov/cas-ggircs-swrs-gcp-api

  replicas: 2
  port: 5000

  resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

app:
  route:
    ssl:
      enable: true
      issueCertIfDisabled: true
      caServerSecret: ~
      caServerKey: ~
      caAccountEmail: ggircs@gov.bc.ca
      storageClassName: netapp-file-standard
    host: ~
  sitewide_notice:
    content: ""
  port: 3000
  probesPort: 9000
  env:
    supportEmail: ggircs@gov.bc.ca

download-ggircs-dags:
  enabled: true
  airflowEndpoint: https://cas-airflow-dev.apps.silver.devops.gov.bc.ca
  dagId: fetch_and_save_dag_from_github
  helm:
    hook: "pre-install,pre-upgrade"

download-swrs-dags:
  enabled: true
  airflowEndpoint: https://cas-airflow-dev.apps.silver.devops.gov.bc.ca
  dagId: fetch_and_save_dag_from_github
  helm:
    hook: "pre-install,pre-upgrade"

trigger-ggircs-deploy-db:
  enabled: true
  airflowEndpoint: https://cas-airflow-dev.apps.silver.devops.gov.bc.ca
  dagId: cas_ggircs_deploy_db
  activeDeadlineSeconds: 3600
  helm:
    hook: false

nginx-sidecar:
  image:
    repository: ghcr.io/bcgov/cas-nginx
    tag: latest
    pullPolicy: Always
  objectNamePrefix: cas-ggircs
  hostName: cas-ggircs.apps.silver.devops.gov.bc.ca
  port: 3001
  internalPort: 3000
  # set to false to deploy the application with an insecure route,
  # and issue an SSL certificate using acme.sh
  sslTermination: true
  # If provided, the acme issue/renewal scripts will use a custom server
  # Otherwise it defaults to Let's Encrypt
  caServerSecret: ~ # pragma: allowlist secret
  caServerKey: ~
  caAccountEmail: ggircs@gov.bc.ca
  storageClassName: netapp-file-standard
  renewalDays: 60

terraform-bucket-provision:
  terraform:
    namespace_apps: '["ggircs-backups", "swrs-import"]'
