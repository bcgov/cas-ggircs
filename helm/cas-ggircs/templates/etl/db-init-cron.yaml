apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "cas-ggircs.fullname" . }}-db-init
  labels:
    release: {{ .Release.Name }}
{{ include "cas-ggircs.labels" . | indent 4 }}
spec:
  suspend: true # This cron job is intended to be triggered manually
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 600
      template:
        metadata:
          labels:
            name: {{ template "cas-ggircs.fullname" . }}-db-init
            release: {{ .Release.Name }}
{{ include "cas-ggircs.labels" . | indent 12 }}
        spec:
          restartPolicy: Never
          containers:
            - env:
                {{- include "cas-ggircs.databaseEnvVars.postgresUser" . | nindent 16 }}
                - name: PGDATABASE
                  value: postgres
                  valueFrom: null
                - name: GGIRCS_USER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: {{ .Values.database.releaseName }}-{{ .Values.database.chartName }}-pguser-{{ .Values.database.user}}
                - name: GGIRCS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: {{ .Values.database.releaseName }}-{{ .Values.database.chartName }}-pguser-{{ .Values.database.user}}
                - name: GGIRCS_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: dbname
                      name: {{ .Values.database.releaseName }}-{{ .Values.database.chartName }}-pguser-{{ .Values.database.user}}
              name: {{ template "cas-ggircs.fullname" . }}-db-init
              image: {{ .Values.image.psql.repository }}:{{ default .Values.defaultImageTag .Values.image.psql.tag }}
              imagePullPolicy: {{ default .Values.defaultImagePullPolicy .Values.image.psql.pullPolicy }}
              resources:
                limits:
                  cpu: 1000m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
              command:
                - /usr/bin/env
                - bash
                - -c
                - |
                  set -euo pipefail;
{{ .Values.persistence.preInitDb | indent 18 }}
                  create-user-db -d $(GGIRCS_DATABASE) -u $(GGIRCS_USER) -p $(GGIRCS_PASSWORD) --owner;
                  psql -c "GRANT CONNECT ON DATABASE $(GGIRCS_DATABASE) TO _crunchypgbouncer;"
                  alter-role $(GGIRCS_USER) createrole;
