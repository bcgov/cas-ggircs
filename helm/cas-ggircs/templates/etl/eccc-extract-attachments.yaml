apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "cas-ggircs.fullname" . }}-eccc-extract-attachments
  labels:
    release: {{ .Release.Name }}
{{ include "cas-ggircs.labels" . | indent 4 }}
spec:
  suspend: true # This cron job is intended to be triggered manually
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 172800
      template:
        metadata:
          labels:
            name: {{ template "cas-ggircs.fullname" . }}-eccc-extract-attachments
            release: {{ .Release.Name }}
{{ include "cas-ggircs.labels" . | indent 12 }}
        spec:
          restartPolicy: Never
          containers:
            - env:
                {{- include "cas-ggircs.databaseEnvVars.ggircsUser" . | nindent 16 }}
                - name: BUCKET_NAME
                  valueFrom:
                    secretKeyRef:
                      key: bucket_name
                      name: gcp-{{ .Release.Namespace }}-{{ .Values.swrsImportBucket.bucketSuffix }}-service-account-key
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: /app/gcs/viewer_credentials.json
                - name: ECCC_ZIP_PASSWORDS
                  valueFrom:
                    secretKeyRef:
                      key: zip_passwords
                      name: eccc-swrs-import
              name: {{ template "cas-ggircs.fullname" . }}-eccc-extract-attachments
              image: {{ .Values.image.ecccExtract.repository }}:{{ default .Values.defaultImageTag .Values.image.ecccExtract.tag }}
              imagePullPolicy: {{ default .Values.defaultImagePullPolicy .Values.image.ecccExtract.pullPolicy }}
              command: ["python"]
              args: ["extract_attachments.py"]
              volumeMounts:
                - name: gcs-credentials
                  mountPath: /app/gcs
                  readOnly: true
              resources:
                limits:
                  cpu: '4'
                  memory: 4Gi
                requests:
                  cpu: '3'
                  memory: 2Gi
          volumes:
            - name: gcs-credentials
              secret:
                secretName: gcp-{{ .Release.Namespace }}-{{ .Values.swrsImportBucket.bucketSuffix }}-service-account-key
