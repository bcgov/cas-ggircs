apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "cas-ggircs.fullname" . }}-eccc-extract
  labels:
    release: {{ .Release.Name }}
{{ include "cas-ggircs.labels" . | indent 4 }}
spec:
  suspend: true # This cron job is intended to be triggered manually
  schedule: "* * * * *"
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            name: {{ template "cas-ggircs.fullname" . }}-eccc-extract
            release: {{ .Release.Name }}
{{ include "cas-ggircs.labels" . | indent 12 }}
        spec:
          restartPolicy: Never
          containers:
            - env:
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: {{ template "cas-ggircs.fullname" . }}
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: {{ template "cas-ggircs.fullname" . }}
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: {{ template "cas-ggircs.fullname" . }}
                - name: PGPORT
                  value: "5432"
                - name: PGHOST
                  value: {{ template "cas-ggircs.fullname" . }}-patroni
                - name: BUCKET_NAME
                  valueFrom:
                    secretKeyRef:
                      key: bucket_name
                      name: {{ .Release.Namespace }}-{{ .Values.swrsImportBucket.bucketSuffix | quote }}-service-account-key
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: /app/gcs/credentials.json
              name: {{ template "cas-ggircs.fullname" . }}-eccc-extract
              image: {{ .Values.image.ecccExtract.repository }}:{{ .Values.image.ecccExtract.tag }}
              imagePullPolicy: {{ .Values.image.ecccExtract.pullPolicy }}
              volumeMounts:
                - name: gcs-credentials
                  mountPath: /app/gcs
                  readOnly: true
                - name: uploaded-files
                  mountPath: /app/out
                  readOnly: false
              resources:
                limits:
                  cpu: 1000m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
              command:
                - ./init.sh
                - $(BUCKET_NAME)
          volumes:
            - name: gcs-credentials
              secret:
                secretName: {{ .Release.Namespace }}-{{ .Values.swrsImportBucket.bucketSuffix | quote }}-service-account-key
            - name: uploaded-files
              configMap:
                name: {{ template "cas-ggircs.fullname" . }}-eccc-uploaded-files
                items:
                  - key: "uploadOutput.json"
                    path: "uploadOutput.json"
