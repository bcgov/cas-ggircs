apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: deploy-template

parameters:
- description: Prefix to prepend to object name.
  displayName: Prefix
  name: PREFIX
  required: true
- description: Version of PostgreSQL image to be used (10 for now).
  displayName: Version of PostgreSQL Image
  name: POSTGRES_VERSION
  required: true
  value: "latest"
- description: SHA1 of git revision to be deployed.
  displayName: Git SHA1
  name: GIT_SHA1
  required: true
- description: Openshift project name
  displayName: Project
  name: OC_PROJECT
  required: true
- description: Openshift registry URL
  displayName: Registry
  name: OC_REGISTRY
  required: true

objects:
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: ${PREFIX}etl
  spec:
    backoffLimit: 0
    activeDeadlineSeconds: 3600
    template:
      metadata:
        labels:
          name: ${PREFIX}etl
      spec:
        restartPolicy: Never
        containers:
        - env:
          - name: SQITCH_TARGET
            value: "db:pg:"
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${PREFIX}postgres
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${PREFIX}postgres
          - name: PGDATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${PREFIX}postgres
          - name: PGPORT
            value: "5432"
          - name: PGHOST
            value: ${PREFIX}postgres
          - name: SQITCH_FULLNAME
            value: OpenShift Deployer
          - name: SQITCH_EMAIL
            value: deployer@pathfinder.gov.bc.ca
          name: ${PREFIX}etl
          image: ${OC_REGISTRY}/${OC_PROJECT}/${PREFIX}etl:${GIT_SHA1}
          resources:
            limits:
              cpu: 1000m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
          - mountPath: /opt/app-root/src/data
            name: ${PREFIX}data
          command:
            - /usr/bin/env
            - bash
            - -c
            - |
              set -euo pipefail;
              sqitch deploy;
              echo "Exporting data to 'swrs' schema";
              psql -c "select swrs_transform.load()";
        volumes:
        - name: ${PREFIX}data
          persistentVolumeClaim:
            claimName: ${PREFIX}data
